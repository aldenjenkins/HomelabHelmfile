{{- if .Values.bridges.discord.enabled }}
apiVersion: v1
kind: ConfigMap
metadata:
  name: {{ include "matrix.fullname" . }}-discord-config
  labels:
  {{ include "matrix.labels" . | nindent 4}}
data:
  config.yaml: |
    bridge:
      # Domain part of the bridge, e.g. matrix.org
      domain: {{ .Values.matrix.serverName }}
      # This should be your publically facing URL because Discord may use it to
      # fetch media from the media store.
      homeserverUrl: "{{ include "matrix.baseUrl" . }}"
      # Interval at which to process users in the 'presence queue'. If you have
      # 5 users, one user will be processed every 500 milliseconds according to the
      # value below. This has a minimum value of 250.
      # WARNING: This has a high chance of spamming the homeserver with presence
      # updates since it will send one each time somebody changes state or is online.
      presenceInterval: 500
      # Disable setting presence for 'ghost users' which means Discord users on Matrix
      # will not be shown as away or online.
      disablePresence: {{ not .Values.bridges.discord.presence }}
      # Disable sending typing notifications when somebody on Discord types.
      disableTypingNotifications: {{ .Values.bridges.discord.typingNotifications }}
      # Disable deleting messages on Discord if a message is redacted on Matrix.
      disableDeletionForwarding: false
      # Enable users to bridge rooms using !discord commands. See
      # https://t2bot.io/discord for instructions.
      enableSelfServiceBridging: {{ .Values.bridges.discord.selfService }}
      # Disable sending of read receipts for Matrix events which have been
      # successfully bridged to Discord.
      disableReadReceipts: {{ not .Values.bridges.discord.readReceipt }}
      # Disable Join Leave echos from matrix
      disableJoinLeaveNotifications: {{ not .Values.bridges.discord.joinLeaveEvents }}
    # Authentication configuration for the discord bot.
    auth:
      clientID: {{ .Values.bridges.discord.auth.clientId | quote }}
      botToken: {{ .Values.bridges.discord.auth.botToken | quote }}
    logging:
      # What level should the logger output to the console at.
      console: "warn" #silly, verbose, info, http, warn, error, silent
      lineDateFormat: "MMM-D HH:mm:ss.SSS" # This is in moment.js format
      files: []
    database:
      userStorePath: "/data/user-store.db"
      roomStorePath: "/data/room-store.db"
      # You may either use SQLite or Postgresql for the bridge database, which contains
      # important mappings for events and user puppeting configurations.
      # Use the filename option for SQLite, or connString for Postgresql.
      # If you are migrating, see https://github.com/Half-Shot/matrix-appservice-discord/blob/master/docs/howto.md#migrate-to-postgres-from-sqlite
      # WARNING: You will almost certainly be fine with sqlite unless your bridge
      # is in heavy demand and you suffer from IO slowness.
      filename: "/data/discord.db"
      # connString: "postgresql://user:password@localhost/database_name"
    room:
      # Set the default visibility of alias rooms, defaults to "public".
      # One of: "public", "private"
      defaultVisibility: {{ .Values.bridges.discord.defaultVisibility }}
    channel:
      # Pattern of the name given to bridged rooms.
      # Can use :guild for the guild name and :name for the channel name.
      namePattern: {{ .Values.bridges.discord.channelName | quote }}
      # Changes made to rooms when a channel is deleted.
      deleteOptions:
        # Prefix the room name with a string.
        #namePrefix: "[Deleted]"
        # Prefix the room topic with a string.
        #topicPrefix: "This room has been deleted"
        # Disable people from talking in the room by raising the event PL to 50
        disableMessaging: false
        # Remove the discord alias from the room.
        unsetRoomAlias: true
        # Remove the room from the directory.
        unlistFromDirectory: true
        # Set the room to be unavaliable for joining without an invite.
        setInviteOnly: true
        # Make all the discord users leave the room.
        ghostsLeave: true
    limits:
      # Delay in milliseconds between discord users joining a room.
      roomGhostJoinDelay: 6000
      # Delay in milliseconds before sending messages to discord to avoid echos.
      # (Copies of a sent message may arrive from discord before we've
      # fininished handling it, causing us to echo it back to the room)
      discordSendDelay: 750
    ghosts:
      # Pattern for the ghosts nick, available is :nick, :username, :tag and :id
      nickPattern: {{ .Values.bridges.discord.users.nickname | quote }}
      # Pattern for the ghosts username, available is :username, :tag and :id
      usernamePattern: {{ .Values.bridges.discord.users.username | quote }}
  registration.yaml: |
    id: appservice-discord
    as_token: "{{ include "matrix.discord.as_token" . }}"
    hs_token: "{{ include "matrix.discord.hs_token" . }}"
    namespaces:
      users:
        - exclusive: true
          regex: '^@_discord_.*'
      aliases:
        - exclusive: true
          regex: '^#_discord_.*'
    url: "http://{{ include "matrix.fullname" . }}-bridge-discord:{{ .Values.bridges.discord.service.port }}"
    sender_localpart: _discord_bot
    rate_limited: false
    protocols:
      - discord
{{- end }}
